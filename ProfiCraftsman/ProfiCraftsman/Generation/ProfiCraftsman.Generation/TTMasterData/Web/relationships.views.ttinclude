<#@ import namespace="System.Text" #>
<#@ import namespace="MetadataLoader.Contracts.Generation" #>
<#@ include file="..\ProfiCraftsman.GenerationContext.ttinclude"  once="true" #>
<#
    IWebGenerationContext context = generationContext;
    foreach (var model in context.WebModels)
    {
        var entityContent = model.Table.Content;
        
		//skip related objects
		if(entityContent.IsRelated)
		{
			continue;
		}
		
		context.FileManager.StartNewFile(entityContent.CodeName + "Relationships.js");
		//Model

		var relationShips = String.Empty;
		if(!String.IsNullOrEmpty(entityContent.RelationShips) &&
		   !String.IsNullOrEmpty(entityContent.RelationShipsSelectors))
		{
			var parts = entityContent.RelationShips.Split(',');
			var selectors = entityContent.RelationShipsSelectors.Split(',');

			for(int i = 0; i < parts.Length; i++)
			{
				var part = parts[i];
				var selector = selectors[i];
				relationShips += "{" + String.Format(" view: 'l!t!{0}', selector: '.{1}'", part, selector) + "},\n";
			}
		}

#>
define([
	'base/base-object-tab-view',
    'kendo/kendo.tabstrip'
], function (BaseView) {
    'use strict';

    var view = BaseView.extend({

        tabs: function () {
            
            var result = [
				<#= relationShips #>                
            ];
            
            return result;
        }
    });

    return view;
});
<#
		context.FileManager.EndBlock();
    }
    context.FileManager.Process();
#>